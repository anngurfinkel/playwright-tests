pipeline {
  agent any

  tools {
    nodejs 'NodeJS_22'
  }

  environment {
    PLAYWRIGHT_BROWSERS_PATH = './node_modules/playwright/.local-browsers'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install dependencies') {
      steps {
        sh 'npm ci'
      }
    }

    stage('Run Playwright tests') {
      steps {
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —î —Ñ–µ–π–ª–∏
        sh 'npx playwright test || true'

        // –ö–æ–ø—ñ—é—î–º–æ –∑–≤—ñ—Ç —É –æ–∫—Ä–µ–º—É –ø–∞–ø–∫—É, —è–∫—É –∞—Ä—Ö—ñ–≤—É—î–º–æ
        sh 'cp -r playwright-report html-report'
      }
    }

    stage('–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–ø–æ—Ä—Ç—É') {
      steps {
        sh 'ls -la html-report'
        sh 'test -f html-report/index.html && echo "‚úÖ index.html —ñ—Å–Ω—É—î!" || echo "‚ùå index.html –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ!"'
      }
    }

    stage('Archive HTML Report') {
      steps {
        archiveArtifacts artifacts: 'html-report/**', fingerprint: true
      }
    }

    stage('Publish Playwright Report') {
      steps {
        publishHTML([
          allowMissing: false,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: 'html-report',
          reportFiles: 'index.html',
          reportName: 'Playwright Report'
        ])
      }
    }
  }

  post {
    always {
      emailext (
        subject: "üìã Playwright Report - ${currentBuild.fullDisplayName}",
        body: """
          <p><strong>Build result:</strong> ${currentBuild.currentResult}</p>
          <p>‚úÖ <a href="${env.BUILD_URL}Playwright_20Report">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ Playwright –∑–≤—ñ—Ç</a></p>
          <p>üìÅ <a href="${env.BUILD_URL}artifact/html-report/index.html">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —è–∫ —Ñ–∞–π–ª</a></p>
        """,
        to: 'ann.gurfinkel@gmail.com',
        mimeType: 'text/html'
      )

      cleanWs()
    }
  }
}
